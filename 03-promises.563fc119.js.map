{"mappings":"siBAGA,MAAMA,EAAOC,SAASC,cAAc,SAE9BC,EAAgB,CAACC,EAAUC,KAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,GACT,EAoBJL,EAAKa,iBAAiB,UAjBtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOH,EAAOI,OAAQF,GAAK,EAC7CjB,EAAciB,EAAI,EAAGC,OAAOhB,EAAMiB,OAASD,OAAOJ,EAAKK,OAASF,GAC7DG,MAAKD,IACJE,EAAAC,GAASC,OAAOC,KAAKL,EAAM,IAE5BM,OAAMC,IACLL,EAAAC,GAASC,OAAOC,KAAKE,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import '../css/common.css';\nimport Notiflix from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nconst createPromise = (position, delay) => {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n};\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  for (let i = 0; i < Number(amount.value); i += 1) {\n    createPromise(i + 1, Number(delay.value) + Number(step.value) * i)\n      .then(value => {\n        Notiflix.Notify.info(value);        \n      })\n      .catch(error => {\n        Notiflix.Notify.info(error);        \n      });\n  }\n}\n\nform.addEventListener('submit', handleSubmit);\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","elements","step","amount","currentTarget","i","Number","value","then","$parcel$interopDefault","$iQIUW","Notify","info","catch","error"],"version":3,"file":"03-promises.563fc119.js.map"}